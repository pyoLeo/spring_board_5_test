<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources 
   in the ${webappRoot}/resources directory -->
<!--    mapping="/   resources/**
   http://아이피:8080/ex/resources/a.jpg
   http://아이피:8080/ex/resources/css/img/
    - mapping : 접속 URL 패턴  - location : 물리적 폴더 경로  -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   
   <context:component-scan base-package="edu.bit.ex" />
   
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
   
<!--     <beans:bean id="logAop" class="edu.bit.ex.aop.LogAop" />
   <beans:bean id="logAdvice" class="edu.bit.ex.aop.LogAdvice" /> 
   

   
      Aspect : 공통기능이 들어 있는 클래스(예제, 로깅... 트랜잭션 .. )
      Advice : Aspect 클래스에 들어 있는 공통기능(한마디로 Aspcect 안의 함수)
      JointPoint :  advice 함수가 적용되는 함수
      PointCut : Jointpoint의 부분으로 실제로 적용되는 함수내의 지점
      weaving: Advice를 적용하는 행위 
   
   AOP설정   
   <aop:config>
      <aop:aspect ref="logAdvice">
         <aop:pointcut id="publicM" expression="within(edu.bit.ex.service.*)"/>
         <aop:before pointcut-ref="publicM" method="printLogging" />
      </aop:aspect>
   </aop:config>
   
   <aop:config>
      aspect id는 logger이고, logAop를 참조함
      <aop:aspect  ref="logAop">
          pointcut(핵심 기능)의 id는 publicM이고, edu.bit.ex.* 패키지에 있는 모든 클래스에 공통 기능을 적용
         <aop:pointcut id="publicM" expression="within(edu.bit.ex.service.*)"/>
         loggerAop()라는 공통 기능을 publicM라는 pointcut에 적용
         <aop:around pointcut-ref="publicM" method="loggerAop" />          
      </aop:aspect>
   </aop:config> -->
     
</beans:beans>